<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bee.platform.cloud.user.dao.mapper.AuthPlatformUserEnterpriseMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.bee.platform.cloud.user.entity.AuthPlatformUserEnterprise">
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="enterprise_id" property="enterpriseId" />
        <result column="departments_id" property="departmentsId" />
        <result column="post_id" property="postId" />
        <result column="status" property="status" />
        <result column="deleted" property="deleted" />
        <result column="create_user" property="createUser" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, user_id, enterprise_id,departments_id,post_id, status, deleted, create_user, create_time, update_time
    </sql>

    <insert id="batchInsert" useGeneratedKeys="true" keyProperty="id">
        insert into auth_platform_user_enterprise (user_id,enterprise_id,departments_id,post_id,status,deleted,create_user,create_time,update_time) values
        <foreach collection="list" item="e" separator=",">
            (
            #{e.userId,jdbcType=INTEGER},
            #{e.enterpriseId,jdbcType=INTEGER},
            #{e.departmentsId,jdbcType=INTEGER},
            #{e.postId,jdbcType=INTEGER},
            #{e.status,jdbcType=INTEGER},
            #{e.deleted,jdbcType=INTEGER},
            #{e.createUser,jdbcType=INTEGER},
            #{e.createTime,jdbcType=TIMESTAMP},
            #{e.updateTime,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>


    <select id="findUserEnterpriseIds" resultType="int">
        select distinct ae.id from auth_platform_user_enterprise apue
        inner join auth_enterprise ae on ae.id = enterprise_id and ae.status = 1 and ae.deleted = 0
        where apue.status = 1 and apue.deleted = 0 and user_id = #{userId}
        order by apue.create_time desc
    </select>

    <select id="findUserByEnterpriseId" resultType="integer">
        select user_id from auth_platform_user_enterprise where  status =1 and deleted=0
        <if test="enterpriseId!=null">
            and enterprise_id =#{enterpriseId}
        </if>
        <if test="data!=null and data.size>0">
            and user_id in
            <foreach collection="data" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
</mapper>
